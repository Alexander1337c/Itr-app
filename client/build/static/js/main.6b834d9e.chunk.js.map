{"version":3,"sources":["hookc/http.hook.js","context/AuthContext.js","components/Loader.js","components/UserPage.js","pages/UserTable.js","components/Note/ColorPicker.js","components/Note/StickyEditor.js","components/Note/NotesList.js","components/Note/StickyGrid.js","components/Note/Sticky.js","pages/StickyPage.js","pages/AuthPage.js","hookc/message.hook.js","components/Navbar.js","App.js","hookc/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","console","log","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","UserPage","props","clicked","event","target","checked","i","n","checkboxes","document","getElementsByName","length","checkedId","users","map","x","_id","handleClick","id","includes","filter","deleteUser","axios","delete","then","parse","localStorage","getItem","removeItem","window","location","href","setState","state","el","reload","e","blockUser","put","unblockUser","bind","get","catch","type","onClick","this","index","key","name","email","Date","regDate","toLocaleString","loginDate","status","Component","UserTable","setUsers","useContext","fetchUsers","Authorization","fetched","useEffect","COLORS","ColorPicker","color","selected","value","backgroundColor","onChange","React","StickyEditor","useHistory","auth","title","text","note","setNote","handleNoteAdd","changeHandler","placeholder","rows","disabled","NoteList","notes","options","itemSelector","columnWidth","gutter","isFitWidth","StickyGrid","setNotes","fetchNotes","Sticky","StickyPage","AuthPage","M","toast","html","password","form","setForm","updateTextFields","registerHandler","loginHandler","htmlFor","Navbar","history","to","preventDefault","push","App","setToken","ready","setReady","setUserId","jwtToken","setItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"wWAEaA,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAgCzB,MAAO,CAAEH,UAASI,QA5BFC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC3ET,GAAW,GADa,SAGhBQ,IACAA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBALV,SAQGG,MAAMP,EAAK,CAAEE,SAAQC,OAAMC,YAR9B,cAQdI,EARc,OASpBC,QAAQC,IAAI,UAAWF,GATH,UAUDA,EAASG,OAVR,WAUdC,EAVc,OAYfJ,EAASK,GAZM,uBAaV,IAAIC,MAAMF,EAAKG,SAAW,kGAbhB,eAgBpBpB,GAAW,GAhBS,kBAkBbiB,GAlBa,wCAoBpBjB,GAAW,GACXE,EAAS,KAAEkB,SArBS,+DAAD,sDAwBxB,IAIwBnB,QAAOoB,WAFfjB,uBAAY,kBAAMF,EAAS,QAAO,MC9BzD,SAASoB,KAEF,IAAMC,EAAcC,wBAAc,CACrCC,MAAO,KACPC,OAAQ,KACRC,MAAOL,EACPM,OAAQN,EACRO,iBAAiB,ICPRC,EAAS,kBAClB,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SACjE,yBAAKC,UAAU,4BACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,YAEnB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAEnB,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,gB,yECLdC,G,mBAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KASVC,QAAU,SAACC,GACP,GAAIA,EAAMC,OAAOC,QAEb,IADA,IACSC,EAAI,EAAGC,GADZC,EAAaC,SAASC,kBAAkB,sBACbC,OAAQL,EAAIC,EAAGD,IAC1CE,EAAWF,GAAGD,SAAU,EACxB,EAAKO,UAAY,GACjB,EAAKA,UAAY,EAAKX,MAAMY,MAAMC,KAAI,SAAAC,GAClC,OAAOA,EAAEC,WAIjB,KAAIR,EACJ,IAASF,EAAI,EAAGC,GADZC,EAAaC,SAASC,kBAAkB,sBACbC,OAAQL,EAAIC,EAAGD,IAC1CE,EAAWF,GAAGD,SAAU,EACxB,EAAKO,UAAY,GAGzBlC,QAAQC,IAAI,EAAKiC,YA3BF,EA6BnBA,UAAY,GA7BO,EA8BnBK,YAAc,SAACd,EAAOe,GAEdf,EAAMC,OAAOC,SACuB,IAAhC,EAAKO,UAAUO,SAASD,KACxB,EAAKN,UAAL,sBAAqB,EAAKA,WAA1B,CAAqCM,KAGzC,EAAKN,UAAY,EAAKA,UAAUQ,QAAO,SAAAL,GAAC,OAAIA,IAAMG,KAItDxC,QAAQC,IAAI,EAAKiC,YAzCF,EAqDnBS,WArDmB,sBAqDN,4BAAAnD,EAAA,sDAET,IAASoC,EAAI,EAAGA,GAAK,EAAKM,UAAUD,OAAQL,IAExC,IAEIgB,IAAMC,OAAO,sDAAwD,EAAKX,UAAUN,IAE/EkB,MAAK,SAAA/C,GAAcC,QAAQC,IAAIF,EAASI,SACzCP,KAAKmD,MAAMC,aAAaC,QAAQ,aAAarC,SAAW,EAAKsB,UAAUN,KACvEoB,aAAaE,WAAW,YAExBC,OAAOC,SAASC,KAAO,KAG3B,EAAKC,SAAS,CACVnB,MAAO,EAAKoB,MAAMpB,MAAMO,QAAO,SAAAc,GAAE,OAAIA,EAAGlB,MAAQ,EAAKJ,UAAUN,QAGnE5B,QAAQC,IAAI,EAAKiC,UAAUN,IAC3BuB,OAAOC,SAASK,SAElB,MAAOC,IAtBJ,2CArDM,EAgFnBC,UAhFmB,sBAgFP,4BAAAnE,EAAA,sDAER,IAASoC,EAAI,EAAGA,GAAK,EAAKM,UAAUD,OAAQL,IAExC,IAEIgB,IAAMgB,IAAI,mEAAqE,EAAK1B,UAAUN,IAEzFkB,MAAK,SAAA/C,GAAcC,QAAQC,IAAIF,EAASI,SACzCP,KAAKmD,MAAMC,aAAaC,QAAQ,aAAarC,SAAW,EAAKsB,UAAUN,KACvEoB,aAAaE,WAAW,YAExBC,OAAOC,SAASC,KAAO,KAE3BrD,QAAQC,IAAI,EAAKiC,UAAUN,IAC3BuB,OAAOC,SAASK,SAElB,MAAOC,IAjBL,2CAhFO,EAqGnBG,YArGmB,sBAqGL,4BAAArE,EAAA,sDAEV,IAASoC,EAAI,EAAGA,GAAK,EAAKM,UAAUD,OAAQL,IAExC,IAEIgB,IAAMgB,IAAI,qEAAuE,EAAK1B,UAAUN,IAE3FkB,MAAK,SAAA/C,GAAcC,QAAQC,IAAIF,EAASI,SACzCP,KAAKmD,MAAMC,aAAaC,QAAQ,aAAarC,SAAW,EAAKsB,UAAUN,KACvEoB,aAAaE,WAAW,YAExBC,OAAOC,SAASC,KAAO,UAG3B,EAAKC,SAAS,CACVnB,MAAO,EAAKoB,MAAMpB,MAAMO,QAAO,SAAAc,GAAE,OAAIA,EAAGlB,MAAQ,EAAKJ,UAAUN,QAGnE5B,QAAQC,IAAI,EAAKiC,UAAUN,IAC3BuB,OAAOC,SAASK,SAElB,MAAOC,IAtBH,2CAnGV,EAAKnB,YAAc,EAAKA,YAAYuB,KAAjB,gBACnB,EAAKnB,WAAa,EAAKA,WAAWmB,KAAhB,gBAClB,EAAKtC,QAAU,EAAKA,QAAQsC,KAAb,gBACf,EAAKnB,WAAa,EAAKA,WAAWmB,KAAhB,gBAClB,EAAKP,MAAQ,CAAEpB,MAAO,GAAID,UAAW,IANtB,E,iFA2CE,IAAD,OAChBU,IAAMmB,IAAI,sDACLjB,MAAK,SAAA/C,GACF,EAAKuD,SAAS,CAAEnB,MAAOpC,EAASI,UAEnC6D,OAAM,SAAC7E,GACJa,QAAQC,IAAId,Q,+BAmFd,IAAD,OAEL,OACI,yBAAKkC,UAAY,SACb,yJACA,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,4BAAI,+BAAO,2BAAO4C,KAAK,WAAWzB,GAAG,SAAS0B,QAASC,KAAK3C,UAAW,iCACvE,kCACA,kDACA,qCACA,4EACA,qGACA,sEAGR,+BAEK2C,KAAK5C,MAAMY,MAAMC,KAAI,SAACD,EAAOiC,GAC1B,OACI,wBAAIC,IAAKlC,EAAMG,IAAKjB,UApB3B,QAqBW,4BAAI,+BAAO,2BAAO4C,KAAK,WAAWzB,GAAG,QAAQ8B,KAAK,oBAAoBJ,QAAS,SAAAzC,GAAK,OAAI,EAAKc,YAAYd,EAAOU,EAAMG,QAAQ,iCAC9H,4BAAK8B,EAAQ,GACb,4BAAKjC,EAAMmC,MACX,4BAAKnC,EAAMoC,OACX,4BAAK,IAAIC,KAAKrC,EAAMsC,SAASC,eAAe,OAC5C,4BAAK,IAAIF,KAAKrC,EAAMwC,WAAWD,eAAe,OAC9C,4BAAKvC,EAAMyC,cAO/B,uBAAGvB,KAAK,IAAIhC,UAAU,uCAAuC6C,QAASC,KAAKxB,YAAY,uBAAGtB,UAAU,kBAAb,WACvF,uBAAGgC,KAAK,IAAIhC,UAAU,uCAAuC6C,QAASC,KAAKR,WAAW,uBAAGtC,UAAU,kBAAb,UACtF,uBAAGgC,KAAK,IAAIhC,UAAU,wCAAwC6C,QAASC,KAAKN,aAA5E,6F,GA3KsBgB,cCFzBC,EAAY,WAAO,IAAD,EACH9F,mBAAS,IADN,mBACtBmD,EADsB,KACf4C,EADe,OAEFhG,IAApBE,EAFsB,EAEtBA,QAASI,EAFa,EAEbA,QACTsB,EAASqE,qBAAWvE,GAApBE,MAEDsE,EAAa3F,sBAAW,sBAAC,4BAAAE,EAAA,+EAELH,EAAQ,aAAc,MAAO,KAAM,CACvD6F,cAAc,UAAD,OAAYvE,KAHA,OAErBwE,EAFqB,OAK3BJ,EAASI,GALkB,uGAO5B,CAACxE,EAAOtB,IAMX,OAJA+F,qBAAU,WACRH,MACC,CAACA,IAEAhG,EACK,kBAAC,EAAD,MAIP,qCACIA,GAAW,kBAAC,EAAD,CAAUkD,MAAOA,M,gBC1B9BkD,G,cAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAqBnEC,E,iLAlBD,IAAD,OACL,OACI,yBAAKjE,UAAU,eAEPgE,EAAOjD,KAAI,SAAAmD,GAAK,OACZ,yBACIlB,IAAKkB,EACLlE,UAAmC,CAAEmE,SAAU,EAAKjE,MAAMkE,QAAUF,GACpEtE,MAAO,CAAEyE,gBAAiBH,GAC1BrB,QAAS,EAAK3C,MAAMoE,SAAS7B,KAAK,KAAMyB,a,GAV1CK,IAAMf,WCEnBgB,EAAe,WACRC,cAAhB,IACMC,EAAOf,qBAAWvE,GAChBpB,EAAYN,IAAZM,QAHsB,EAINL,mBAAS,CAC7BgH,MAAO,GAAIC,KAAM,GAAIV,MAAO,SALF,mBAIvBW,EAJuB,KAIjBC,EAJiB,KAQxBC,EAAa,uCAAG,WAAM3E,GAAN,eAAAjC,EAAA,+EAEKH,EAAQ,aAAc,OAAf,eAA4B6G,GAAQ,CAC1DhB,cAAc,UAAD,OAAYa,EAAKpF,SAHpB,OAERR,EAFQ,OAMdgD,OAAOC,SAASK,SAChBzD,QAAQC,IAAIE,GACZgG,EAAQ,CAAEH,MAAO,GAAIC,KAAM,GAAIV,MAAO,SARxB,yGAAH,sDAiBbc,EAAgB,SAAA5E,GAClB0E,EAAQ,eAAKD,EAAN,eAAazE,EAAMC,OAAO4C,KAAO7C,EAAMC,OAAO+D,UAMzD,OACI,yBAAKpE,UAAU,cACX,2BACI4C,KAAK,OACL5C,UAAU,oBACViF,YAAY,cACZb,MAAOS,EAAKF,MACZ1B,KAAK,QACLqB,SAAUU,IAGd,8BACIC,YAAY,kBACZC,KAAM,EACNlF,UAAU,mBACVoE,MAAOS,EAAKD,KACZ3B,KAAK,OACLqB,SAAUU,IAEd,yBAAKhF,UAAU,sBACX,kBAAC,EAAD,CACIiD,KAAK,QACLmB,MAAOS,EAAKX,MACZI,SA1BU,SAACJ,GACvBY,EAAQ,eAAKD,EAAN,CAAYX,cA2BX,4BACIlE,UAAU,qBACVmF,UAAWN,EAAKD,KAChB/B,QAASkC,GAHb,U,iBCxDHK,G,OAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACH3H,IAAZM,QACR,IAAKqH,EAAMzE,OACP,OAAO,uBAAGZ,UAAU,UAAb,oFAGXrB,QAAQC,IAAIyG,GAgBZ,OACI,kBAAC,IAAD,CACIrF,UAAU,WACVsF,QAjBe,CACnBC,aAAc,QACdC,YAAa,IACbC,OAAQ,GACRC,YAAY,IAgBJL,EAAMtE,KAAI,SAAC8D,GACP,OACI,yBAAK7E,UAAU,OAAOJ,MAAO,CAAEyE,gBAAgB,GAAD,OAAKQ,EAAKX,SACpD,0BAAMlE,UAAU,iBAAiB6C,QAAS,kBAhB/C1B,EAgBgE0D,EAAK5D,IAfpFM,IAAMC,OAAO,sDAAsDL,GACpEM,MAAK,SAAA/C,GAAcC,QAAQC,IAAIF,EAASI,cACzCgD,OAAOC,SAASK,SAHA,IAACjB,IAgBK,UAEI0D,EAAKF,MAED,wBAAI3E,UAAU,eAAe6E,EAAKF,OAElC,KAER,yBAAK3E,UAAU,cAAc6E,EAAKD,aCzCjDe,EAAa,WAAO,IAAD,EACFhI,mBAAS,IADP,mBACrB0H,EADqB,KACdO,EADc,OAEClI,IAArBE,EAFoB,EAEpBA,QAASI,EAFW,EAEXA,QACTsB,EAAUqE,qBAAWvE,GAArBE,MAEFuG,EAAa5H,sBAAW,sBAAC,4BAAAE,EAAA,+EAEDH,EAAQ,aAAc,MAAO,KAAM,CACrD6F,cAAc,UAAD,OAAYvE,KAHN,OAEjBwE,EAFiB,OAKvB8B,EAAS9B,GALc,uGAO5B,CAACxE,EAAOtB,IAMT,OAJF+F,qBAAU,WACN8B,MACC,CAACA,IAEAjI,EACK,kBAAC,EAAD,MAGP,qCACMA,GAAW,kBAAC,EAAD,CAAUyH,MAAOA,MCmC3BS,G,wLAXP,OACI,yBAAK9F,UAAU,UACX,wBAAIA,UAAU,iBAAd,8CACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA3CKuE,IAAMf,YCZduC,EAAa,WACtB,OACI,6BAEI,kBAAC,EAAD,QCCCC,G,OAAW,WACpB,IAAMtB,EAAOf,qBAAWvE,GAClBH,ECPChB,uBAAY,SAAA2G,GACX9C,OAAOmE,GAAKrB,GACZ9C,OAAOmE,EAAEC,MAAM,CAAEC,KAAMvB,MAE5B,IDCuB,EAGsBlH,IAAxCE,EAHkB,EAGlBA,QAASE,EAHS,EAGTA,MAAOE,EAHE,EAGFA,QAASkB,EAHP,EAGOA,WAHP,EAIFvB,mBAAS,CAC7BuF,MAAO,GAAIkD,SAAU,GAAInD,KAAM,GAAIK,UAAU,KALvB,mBAInB+C,EAJmB,KAIbC,EAJa,KAQ1BvC,qBAAU,WACN9E,EAAQnB,GACRoB,MACD,CAACpB,EAAOmB,EAASC,IAEpB6E,qBAAU,WACNjC,OAAOmE,EAAEM,qBACV,IAEH,IAAMvB,EAAgB,SAAA5E,GAClBkG,EAAQ,eAAKD,EAAN,eAAajG,EAAMC,OAAO4C,KAAO7C,EAAMC,OAAO+D,UAGnDoC,EAAe,uCAAG,4BAAArI,EAAA,+EAGGH,EAAQ,qBAAsB,OAAvB,eAAoCqI,IAH9C,OAGVvH,EAHU,OAIhBH,QAAQC,IAAIE,GACZG,EAAQH,EAAKG,SALG,yGAAH,qDASfwH,EAAY,uCAAG,4BAAAtI,EAAA,+EAGMH,EAAQ,kBAAmB,OAApB,eAAkCqI,IAH/C,OAGPvH,EAHO,OAIb4F,EAAKlF,MAAMV,EAAKQ,MAAOR,EAAKS,QAC5BZ,QAAQC,IAAIE,GALC,yGAAH,qDASlB,OACI,yBAAKkB,UAAU,OACX,yBAAKA,UAAU,oBACX,mJACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,SAIf,0BAAMA,UAAU,cAAhB,sEACA,6BACI,yBAAKA,UAAU,eACX,2BAEIiF,YAAY,8CACZ9D,GAAG,OACHyB,KAAK,OACLK,KAAK,OACLmB,MAAOiC,EAAKpD,KACZjD,UAAU,eACVsE,SAAUU,IAEd,2BAAO0B,QAAQ,QAAf,uBAEJ,yBAAK1G,UAAU,eACX,2BACIiF,YAAY,mDACZ9D,GAAG,QACHyB,KAAK,OACLK,KAAK,QACLmB,MAAOiC,EAAKnD,MACZlD,UAAU,eACVsE,SAAUU,IAEd,2BAAO0B,QAAQ,SAAf,UAEJ,yBAAK1G,UAAU,eACX,2BAEIiF,YAAY,kFACZ9D,GAAG,WACHyB,KAAK,WACLK,KAAK,WACLmB,MAAOiC,EAAKD,SACZpG,UAAU,eACVsE,SAAUU,IAEd,2BAAO0B,QAAQ,YAAf,2CAKZ,yBAAK1G,UAAU,eACX,4BACIA,UAAU,0BACVmF,SAAUvH,EACViF,QAAS4D,GAHb,kCAKA,4BACIzG,UAAU,gCACV6C,QAAS2D,EACTrB,SAAUvH,GAHd,6EEvGf+I,EAAS,WAClB,IAAMC,EAAUnC,cACVC,EAAOf,qBAAWvE,GAMxB,OACI,6BACI,yBAAKY,UAAU,eACX,0BAAMA,UAAU,cAAhB,OACA,wBAAImB,GAAG,aAAanB,UAAU,8BAC1B,4BAAI,kBAAC,IAAD,CAAS6G,GAAG,UAAZ,+CACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,+CAEJ,4BAAI,uBAAG7E,KAAK,IAAIa,QAbV,SAAAzC,GAClBA,EAAM0G,iBACNpC,EAAKjF,SACLmH,EAAQG,KAAK,OAUG,uCCSTC,MApBf,WAAgB,IAAD,ECLQ,WAAO,IAAD,EACCrJ,mBAAS,MADV,mBAClB2B,EADkB,KACX2H,EADW,OAECtJ,oBAAS,GAFV,mBAElBuJ,EAFkB,KAEXC,EAFW,OAGGxJ,mBAAS,MAHZ,mBAGlB4B,EAHkB,KAGV6H,EAHU,KAMnB5H,EAAQvB,uBAAY,SAACoJ,EAAUlG,GACjC8F,EAASI,GACTD,EAAUjG,GAEVQ,aAAa2F,QAZD,WAYsB/I,KAAKC,UAAU,CAC7Ce,OAAQ4B,EAAI7B,MAAO+H,OAExB,IACG5H,EAASxB,uBAAY,WACvBgJ,EAAS,MACTG,EAAU,MAEVzF,aAAaE,WApBD,cAqBb,IAWH,OATAkC,qBAAU,WACN,IAAMjF,EAAOP,KAAKmD,MAAMC,aAAaC,QAxBzB,aA0BR9C,GAAQA,EAAKQ,OACbE,EAAMV,EAAKQ,MAAOR,EAAKS,QAE3B4H,GAAS,KACV,CAAC3H,IAEG,CAAEA,QAAOC,SAAQH,QAAOC,SAAQ2H,SDxBOK,GAAxCjI,EADK,EACLA,MAAOE,EADF,EACEA,MAAOC,EADT,EACSA,OAAQF,EADjB,EACiBA,OAAQ2H,EADzB,EACyBA,MAChCxH,IAAoBJ,EACpBkI,EENiB,SAAA9H,GACrB,OAAIA,EAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+H,KAAK,SAASC,OAAK,GACtB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,GACtB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUb,GAAG,YAMrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOY,KAAK,IAAIC,OAAK,GACjB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUb,GAAG,OFdRc,CAAUjI,GACzB,OAAKwH,EAKH,kBAAC9H,EAAYwI,SAAb,CAAsBxD,MAAO,CAAE9E,QAAOE,QAAOC,SAAQF,SAAQG,oBAC3D,kBAAC,IAAD,KACGA,GAAmB,kBAAC,EAAD,MACpB,yBAAKM,UAAU,aACZwH,KARA,kBAAC,EAAD,OGFSK,QACW,cAA7B/F,OAAOC,SAAS+F,UAEe,UAA7BhG,OAAOC,SAAS+F,UAEhBhG,OAAOC,SAAS+F,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASvH,SAASwH,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAclB,MACrBzF,MAAK,SAAA4G,GACJA,EAAaC,gBAEd3F,OAAM,SAAA7E,GACLa,QAAQb,MAAMA,EAAMmB,a","file":"static/js/main.6b834d9e.chunk.js","sourcesContent":["import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n            const response = await fetch(url, { method, body, headers })\r\n            console.log('message', response)\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}","import { createContext } from 'react'\r\n\r\nfunction noop() { }\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', paddingTop: '2rem' }}>\r\n        <div className=\"preloader-wrapper active\">\r\n            <div className=\"spinner-layer spinner-red-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\" />\r\n                </div>\r\n                <div className=\"gap-patch\">\r\n                    <div className=\"circle\" />\r\n                </div>\r\n                <div className=\"circle-clipper right\">\r\n                    <div className=\"circle\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../components/Note/UserPage.css'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class UserPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.deleteUser = this.deleteUser.bind(this)\r\n        this.clicked = this.clicked.bind(this)\r\n        this.deleteUser = this.deleteUser.bind(this)\r\n        this.state = { users: [], checkedId: [] };\r\n    }\r\n\r\n    \r\n    clicked = (event) => {\r\n        if (event.target.checked) {\r\n            var checkboxes = document.getElementsByName(\"rowSelectCheckBox\");\r\n            for (var i = 0, n = checkboxes.length; i < n; i++) {\r\n                checkboxes[i].checked = true;\r\n                this.checkedId = []\r\n                this.checkedId = this.props.users.map(x => {\r\n                    return x._id\r\n                })\r\n            }\r\n        } else {\r\n            var checkboxes = document.getElementsByName(\"rowSelectCheckBox\");\r\n            for (var i = 0, n = checkboxes.length; i < n; i++) {\r\n                checkboxes[i].checked = false;\r\n                this.checkedId = []\r\n            }\r\n        }\r\n        console.log(this.checkedId)\r\n    }\r\n    checkedId = []\r\n    handleClick = (event, id) => {\r\n\r\n        if (event.target.checked) {\r\n            if (this.checkedId.includes(id) === false) {\r\n                this.checkedId = [...this.checkedId, id]\r\n            }\r\n        } else {\r\n            this.checkedId = this.checkedId.filter(x => x !== id)\r\n\r\n        }\r\n\r\n        console.log(this.checkedId)\r\n    }\r\n    componentDidMount() {\r\n        axios.get('https://dry-headland-43985.herokuapp.com/api/users')\r\n            .then(response => {\r\n                this.setState({ users: response.data })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    deleteUser = async () => {\r\n\r\n        for (var i = 0; i <= this.checkedId.length; i++) {\r\n\r\n            try {\r\n\r\n                axios.delete('https://dry-headland-43985.herokuapp.com/api/users/' + this.checkedId[i])\r\n\r\n                    .then(response => { console.log(response.data) });\r\n                if (JSON.parse(localStorage.getItem('userData')).userId === this.checkedId[i]) {\r\n                    localStorage.removeItem('userData')\r\n                    // return <Redirect to='/'/>\r\n                    window.location.href = '/';\r\n                }\r\n\r\n                this.setState({\r\n                    users: this.state.users.filter(el => el._id !== this.checkedId[i])\r\n                })\r\n\r\n                console.log(this.checkedId[i])\r\n                window.location.reload()\r\n\r\n            } catch (e) { }\r\n        }\r\n\r\n    }\r\n\r\n    blockUser = async () => {\r\n\r\n        for (var i = 0; i <= this.checkedId.length; i++) {\r\n\r\n            try {\r\n\r\n                axios.put('https://dry-headland-43985.herokuapp.com/api/users/update-block/' + this.checkedId[i])\r\n\r\n                    .then(response => { console.log(response.data) });\r\n                if (JSON.parse(localStorage.getItem('userData')).userId === this.checkedId[i]) {\r\n                    localStorage.removeItem('userData')\r\n                    // return <Redirect to='/'/>\r\n                    window.location.href = '/';\r\n                }\r\n                console.log(this.checkedId[i])\r\n                window.location.reload()\r\n\r\n            } catch (e) { }\r\n        }\r\n\r\n    }\r\n    unblockUser = async () => {\r\n\r\n        for (var i = 0; i <= this.checkedId.length; i++) {\r\n\r\n            try {\r\n\r\n                axios.put('https://dry-headland-43985.herokuapp.com/api/users/update-unblock/' + this.checkedId[i])\r\n\r\n                    .then(response => { console.log(response.data) });\r\n                if (JSON.parse(localStorage.getItem('userData')).userId === this.checkedId[i]) {\r\n                    localStorage.removeItem('userData')\r\n                    // return <Redirect to='/'/>\r\n                    window.location.href = '/users';\r\n                }\r\n\r\n                this.setState({\r\n                    users: this.state.users.filter(el => el._id !== this.checkedId[i])\r\n                })\r\n\r\n                console.log(this.checkedId[i])\r\n                window.location.reload()\r\n\r\n            } catch (e) { }\r\n        }\r\n\r\n    }\r\n    // if (JSON.parse(localStorage.getItem('userData')).userId === id) {\r\n    //     localStorage.removeItem('userData')\r\n    //     return <Redirect to='/'\r\n    //   }\r\n\r\n    render() {\r\n        let classNames = 'list';\r\n        return (\r\n            <div className = \"table\">\r\n                <h3>Таблица пользователей</h3>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th><label><input type=\"checkbox\" id=\"scales\" onClick={this.clicked} /><span></span></label></th>\r\n                            <th>Id</th>\r\n                            <th>Имя</th>\r\n                            <th>Email</th>\r\n                            <th>Дата рег.</th>\r\n                            <th>Дата посл. лог</th>\r\n                            <th>Статус</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {this.props.users.map((users, index) => {\r\n                            return (\r\n                                <tr key={users._id} className={classNames}>\r\n                                    <td><label><input type=\"checkbox\" id=\"scale\" name=\"rowSelectCheckBox\" onClick={event => this.handleClick(event, users._id)} /><span></span></label></td>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{users.name}</td>\r\n                                    <td>{users.email}</td>\r\n                                    <td>{new Date(users.regDate).toLocaleString('ru')}</td>\r\n                                    <td>{new Date(users.loginDate).toLocaleString('ru')}</td>\r\n                                    <td>{users.status}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <a href=\"#\" className=\"waves-effect red darken-1 btn-small \" onClick={this.deleteUser}><i className=\"material-icons\">delete</i></a>\r\n                <a href=\"#\" className=\"waves-effect red lighten-4 btn-small\" onClick={this.blockUser}><i className=\"material-icons\">block</i></a>\r\n                <a href=\"#\" className=\"waves-effect green darken-1 btn-small\" onClick={this.unblockUser}>Разблокировать</a>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// export const UserPage = ({ users }) => {\r\n//     const auth = useContext(AuthContext)\r\n//     const { loading, error, request, clearError } = useHttp()\r\n//     if (!users.length) {\r\n//         return <p className=\"center\">Пользователей нет</p>\r\n//     }\r\n//     console.log(users)\r\n//     const clicked = (event) => {\r\n//         if (event.target.checked) {\r\n//             var checkboxes = document.getElementsByName(\"rowSelectCheckBox\");\r\n//             for (var i = 0, n = checkboxes.length; i < n; i++) {\r\n//                 checkboxes[i].checked = true;\r\n//                 checkedId = []\r\n//                 checkedId = users.map(x => {\r\n//                     return x._id\r\n//                 })\r\n//             }\r\n//         } else {\r\n//             var checkboxes = document.getElementsByName(\"rowSelectCheckBox\");\r\n//             for (var i = 0, n = checkboxes.length; i < n; i++) {\r\n//                 checkboxes[i].checked = false;\r\n//                 checkedId = []\r\n//             }\r\n//         }\r\n//         console.log(checkedId)\r\n//     }\r\n\r\n//     let checkedId = []\r\n\r\n//     const handleClick = (event, id) => {\r\n//         if (event.target.checked) {\r\n//             if (checkedId.includes(id) === false) {\r\n//                 checkedId = [...checkedId, id]\r\n//             }\r\n//         } else {\r\n//             checkedId = checkedId.filter(x => x !== id)\r\n\r\n//         }\r\n\r\n//         console.log(checkedId)\r\n//     }\r\n\r\n//     const deleteUser = async () => {\r\n//         for (var i = 0; i <= checkedId.length; i++) {\r\n//             try {\r\n//                 const data = await request(`/api/users/${checkedId[i]}/delete`, 'DELETE', null, {\r\n//                     Authorization: `Bearer ${auth.token}`\r\n//                 })\r\n//                 console.log(data)\r\n\r\n//             } catch (e) { }\r\n//         }\r\n//     }\r\n//     const block = async () => {\r\n//         for (var i = 0; i <= checkedId.length; i++) {\r\n\r\n//             try {\r\n//                 const data = await request(`/api/users/${checkedId[i]}/update`, 'PUT', null, {\r\n//                     Authorization: `Bearer ${auth.token}`\r\n\r\n//                 })\r\n//                 // if (JSON.parse(localStorage.getItem('userData')).userId === id) {\r\n//                 //     localStorage.removeItem('userData')\r\n//                 // }\r\n\r\n//                 console.log(data)\r\n\r\n//             } catch (e) { }\r\n//         }\r\n//     }\r\n//     const unblock = async () => {\r\n//         for (var i = 0; i <= checkedId.length; i++) {\r\n//             try {\r\n//                 const data = await request(`/api/users/${checkedId[i]}/update`, 'PUT', null, {\r\n//                     Authorization: `Bearer ${auth.token}`\r\n//                 })\r\n//                 console.log(data)\r\n\r\n//             } catch (e) { }\r\n//         }\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <table>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th><input type=\"checkbox\" id=\"scales\" onClick={clicked} /></th>\r\n//                         <th>Id</th>\r\n//                         <th>Имя</th>\r\n//                         <th>Email</th>\r\n//                         <th>Дата рег.</th>\r\n//                         <th>Дата посл. лог</th>\r\n//                         <th>Статус</th>\r\n//                     </tr>\r\n//                 </thead>\r\n\r\n//                 <tbody>\r\n//                     {users.map((users, index) => {\r\n//                         return (\r\n//                             <tr key={users._id}>\r\n//                                 <td><input type=\"checkbox\" id=\"scale\" name=\"rowSelectCheckBox\" onClick={event => handleClick(event, users._id)} /></td>\r\n//                                 <td>{index + 1}</td>\r\n//                                 <td>{users.name}</td>\r\n//                                 <td>{users.email}</td>\r\n//                                 <td>{new Date(users.regDate).toLocaleString('ru')}</td>\r\n//                                 <td>{new Date(users.loginDate).toLocaleString('ru')}</td>\r\n\r\n//                                 <td>{users.status}</td>\r\n\r\n//                                 <td>\r\n\r\n//                                 </td>\r\n//                             </tr>\r\n//                         )\r\n//                     })}\r\n//                 </tbody>\r\n//             </table>\r\n//             <button className=\"delete\" onClick={deleteUser}>Удалить</button>\r\n//             {/* <button className=\"delete\" onClick={block}>Заблокировать</button>\r\n//             <button className=\"delete\" onClick={unblock}>Разблокировать</button> */}\r\n\r\n//         </div>\r\n\r\n\r\n//     )\r\n// }","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hookc/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport UserPage from '../components/UserPage'\r\n\r\nexport const UserTable = () => {\r\n  const [users, setUsers] = useState([])\r\n  const {loading, request} = useHttp()\r\n  const {token} = useContext(AuthContext)\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/users', 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setUsers(fetched)\r\n    } catch (e) {}\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    fetchUsers()\r\n  }, [fetchUsers])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && <UserPage users={users} />}\r\n    </>\r\n  )\r\n}","import React from 'react';\r\n\r\nimport './ColorPicker.css';\r\n\r\nconst COLORS = ['#FFFFFF', '#80D8FF', '#FFFF8D', '#FF8A80', '#CCFF90', '#CFD8DC', '#FFD180'];\r\n\r\nclass ColorPicker extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='ColorPicker'>\r\n                {\r\n                    COLORS.map(color =>\r\n                        <div\r\n                            key={color}\r\n                            className={('ColorPicker__swatch', { selected: this.props.value === color })}\r\n                            style={{ backgroundColor: color }}\r\n                            onClick={this.props.onChange.bind(null, color)}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ColorPicker;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHttp } from '../../hookc/http.hook'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './StickyEditor.css'\r\nimport ColorPicker from './ColorPicker';\r\n\r\nexport const StickyEditor = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const { request } = useHttp()\r\n    const [note, setNote] = useState({\r\n        title: '', text: '', color: '#fff'\r\n    })\r\n\r\n    const handleNoteAdd = async event => {\r\n        try {\r\n            const data = await request('/api/notes', 'POST', { ...note }, {\r\n                Authorization: `Bearer ${auth.token}`\r\n\r\n            })\r\n            window.location.reload()\r\n            console.log(data)\r\n            setNote({ title: '', text: '', color: '#fff' })\r\n            \r\n\r\n\r\n        }\r\n        catch (e) { }\r\n    }\r\n\r\n\r\n    const changeHandler = event => {\r\n        setNote({ ...note, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const handleColorChange = (color) => {\r\n        setNote({ ...note, color });\r\n    }\r\n    return (\r\n        <div className='NoteEditor'>\r\n            <input\r\n                type='text'\r\n                className='NoteEditor__title'\r\n                placeholder='Enter title'\r\n                value={note.title}\r\n                name=\"title\"\r\n                onChange={changeHandler}\r\n            />\r\n\r\n            <textarea\r\n                placeholder='Enter note text'\r\n                rows={5}\r\n                className='NoteEditor__text'\r\n                value={note.text}\r\n                name=\"text\"\r\n                onChange={changeHandler}\r\n            />\r\n            <div className='NoteEditor__footer'>\r\n                <ColorPicker\r\n                    name='color'\r\n                    value={note.color}\r\n                    onChange={handleColorChange}\r\n                />\r\n                <button\r\n                    className='NoteEditor__button'\r\n                    disabled={!note.text}\r\n                    onClick={handleNoteAdd}\r\n                >\r\n                    Add\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useCallback } from 'react'\r\nimport { useHttp } from '../../hookc/http.hook';\r\n\r\nimport Masonry from 'react-masonry-component';\r\nimport './NoteList.css'\r\nimport axios from 'axios';\r\n\r\n \r\n\r\nexport const NoteList = ({ notes }) => {\r\n    const { request } = useHttp()\r\n    if (!notes.length) {\r\n        return <p className=\"center\">Ссылок пока нет</p>\r\n    }\r\n\r\n    console.log(notes)\r\n\r\n    const masonryOptions = {\r\n        itemSelector: '.Note',\r\n        columnWidth: 250,\r\n        gutter: 10,\r\n        isFitWidth: true\r\n    };\r\n\r\n    const deleteNote= (id) => {\r\n        axios.delete('https://dry-headland-43985.herokuapp.com/api/notes/'+id)\r\n      .then(response => { console.log(response.data)});\r\n      window.location.reload()\r\n    }\r\n\r\n\r\n    return (\r\n        <Masonry\r\n            className='NoteList'\r\n            options={masonryOptions}\r\n        >\r\n            {\r\n                notes.map((note) => {\r\n                    return (\r\n                        <div className='Note' style={{ backgroundColor: `${note.color}` }}>\r\n                            <span className='Note__del-icon' onClick={() => deleteNote(note._id)} > × </span>\r\n                            {\r\n                                note.title\r\n                                    ?\r\n                                    <h4 className='Note__title'>{note.title}</h4>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            <div className='Note__text'>{note.text}</div>\r\n                        </div>\r\n\r\n                    )\r\n\r\n\r\n                }\r\n\r\n                )\r\n            }\r\n        </Masonry>\r\n    )\r\n    \r\n}\r\n","import React, { useState, useContext, useCallback, useEffect } from 'react'\r\nimport { useHttp } from '../../hookc/http.hook'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { Loader } from '../Loader'\r\nimport {NoteList} from '../Note/NotesList'\r\n\r\n\r\nexport const StickyGrid = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const { loading, request } = useHttp()\r\n    const { token } = useContext(AuthContext)\r\n\r\n    const fetchNotes = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/notes', 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setNotes(fetched)\r\n        } catch (e) { }\r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        fetchNotes()\r\n      }, [fetchNotes])\r\n    \r\n      if (loading) {\r\n        return <Loader/>\r\n      }\r\n    return (\r\n        <>\r\n            {!loading && <NoteList notes={notes} />}\r\n        </>\r\n    )\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport {StickyEditor} from './StickyEditor'\r\nimport {StickyGrid} from './StickyGrid'\r\n// import NoteStore from '../../stores/NoteStore'\r\n// import NoteActions from '../../actions/NotesActions'\r\nimport { render } from 'react-dom'\r\nimport './Sticky.css'\r\n\r\n// function getStateFromFlux() {\r\n//     return {\r\n//         isLoading: NoteStore.isLoading(),\r\n//         notes: NoteStore.getNotes()\r\n//     }\r\n// }\r\n\r\nclass Sticky extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         ...getStateFromFlux()\r\n    //     }\r\n    //     this._onChange = this._onChange.bind(this)\r\n    // }\r\n    // componentDidMount() {\r\n    //     NoteStore.addChangeListener(this._onChange);\r\n    // }\r\n    // componentWillUnmount() {\r\n    //     NoteStore.removeChangeListener(this._onChange)\r\n    // }\r\n    // componentWillMount() {\r\n    //     NoteActions.loadNotes()\r\n    // }\r\n    // handleNoteAdd(data) {\r\n    //     console.log(data)\r\n    //     NoteStore.createNote(data);\r\n\r\n    // }\r\n    // constructor(){\r\n    //     super();\r\n    //     this.state={\r\n    //         notes:[]\r\n    //     }\r\n    // }\r\n    // handleNoteDelete(note) {\r\n    //     let notes = this.state.notes.slice()\r\n    //     notes = notes.filter(u=>{return n._id !==note._id});\r\n    //     this.setState({notes: notes})\r\n    //     NoteStore.deleteNote(note.id);\r\n    // }\r\n    // _onChange() {\r\n    //     this.setState({ ...getStateFromFlux() })\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Sticky\">\r\n                <h2 className=\"Sticky_header\">Стикеры</h2>\r\n                <StickyEditor/>\r\n                <StickyGrid/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Sticky\r\n\r\n{/* <StickyEditor onNoteAdd={this.handleNoteAdd} /> */}\r\n{/* <StickyGrid notes={this.state.notes} onNoteDelete={this.handleNoteDelete} /> */}","import React from 'react'\r\nimport Sticky from '../components/Note/Sticky'\r\n\r\nexport const StickyPage = () => {\r\n    return (\r\n        <div>\r\n            \r\n            <Sticky/>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport './AuthPage.css'\r\nimport { useHttp } from '../hookc/http.hook'\r\nimport { useMessage } from '../hookc/message.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\n\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const { loading, error, request, clearError } = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '', password: '', name: '', loginDate:''\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n    \r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', { ...form })\r\n            console.log(data)\r\n            message(data.message)\r\n        } catch (e) { }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {  ...form  })\r\n            auth.login(data.token, data.userId)\r\n            console.log(data)\r\n\r\n        } catch (e) { }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Страница регистрации</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"card blue darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <div className=\"link\">\r\n                                {/* <a href=\"#\">Вход</a>\r\n                                <a href=\"#\">Регистрация</a> */}\r\n                            </div>\r\n                            <span className=\"card-title\">Авторизация</span>\r\n                            <div>\r\n                                <div className=\"input-field\">\r\n                                    <input\r\n\r\n                                        placeholder=\"Ваше имя\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        value={form.name}\r\n                                        className=\"yellow-input\"\r\n                                        onChange={changeHandler}\r\n                                    />\r\n                                    <label htmlFor=\"name\">Имя</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <input\r\n                                        placeholder=\"Введите email\"\r\n                                        id=\"email\"\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        value={form.email}\r\n                                        className=\"yellow-input\"\r\n                                        onChange={changeHandler}\r\n                                    />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <input\r\n\r\n                                        placeholder=\"Введите пароль\"\r\n                                        id=\"password\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={form.password}\r\n                                        className=\"yellow-input\"\r\n                                        onChange={changeHandler}\r\n                                    />\r\n                                    <label htmlFor=\"password\">Пароль</label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <button\r\n                                className=\"btn yellow darken-4 mar\"\r\n                                disabled={loading}\r\n                                onClick={loginHandler}\r\n                            >Войти</button>\r\n                            <button\r\n                                className=\"btn grey lighten-1 black-text\"\r\n                                onClick={registerHandler}\r\n                                disabled={loading}\r\n                            >Регистрация</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useCallback } from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({ html: text })\r\n        }\r\n    }, [])\r\n}","import React, { useContext } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n                <span className=\"brand-logo\">Itr</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/table\">Таблица</NavLink></li>\r\n                    <li><NavLink to=\"/notes\">Стикеры</NavLink></li>\r\n               \r\n                    <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport 'materialize-css'\r\nimport { useRoutes } from './routes';\r\nimport { useAuth } from './hookc/auth.hook';\r\nimport { AuthContext } from './context/AuthContext'\r\nimport { Navbar } from './components/Navbar';\r\nimport { Loader } from './components/Loader'\r\n\r\nfunction App() {\r\n  const { token, login, logout, userId, ready } = useAuth()\r\n  const isAuthenticated = !!token\r\n  const routes = useRoutes(isAuthenticated)\r\n  if (!ready) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, login, logout, userId, isAuthenticated }}>\r\n      <Router>\r\n        {isAuthenticated && <Navbar />}\r\n        <div className=\"container\">\r\n          {routes}\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useCallback, useEffect } from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n    \r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        \r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, [])\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        \r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    return { login, logout, token, userId, ready }\r\n}","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport {UserTable} from './pages/UserTable'\r\nimport {StickyPage} from './pages/StickyPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/users\" exact>\r\n                    <UserTable />\r\n                </Route>\r\n                <Route path=\"/notes\" exact>\r\n                    <StickyPage />\r\n                </Route>\r\n                <Redirect to=\"/users\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}